
public int addNode(T node) { ... }  CHECK
  
public String toString() { ... }  CHECK
 
protected int getNode(T node) { ... } CHECK
 
public boolean existsNode(T node) {...} CHECK

public int addEdge(T source, T target, double edgeWeight) { ... } CEHCK
 
public boolean existEdge(T source, T target) { ... } CHECK
 
public double getEdge(T source, T target) { ... } CHECK
 
public int removeEdge(T source, T target) { ... } CHECK
 
public int removeNode(T node) { ... } CHECK

public double[] dijkstra(T nodoOrigen) { ... } CHECK
 
private int minCost(double[] vectorD, boolean[] visited) { ... } CHECK
 
public int floyd() {…} CHECK
 
protected double[][] getAFloyd() { … }  CHECK
 
protected int[][] getPFloyd() { … }  CHECK
 
public double minCostPath(T origen, T destino) {…} CHECK
 
public String path(T origen, T destino) { …} CHECK
 
public String recorridoProfundidad(T nodo) { … } CHECK